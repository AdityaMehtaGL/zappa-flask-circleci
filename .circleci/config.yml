
version: 2
jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/zfc

    steps:
      - checkout

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements.txt" }}
        
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python -m pytest -v

  deploy:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/zfc

    steps:
      - checkout

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: deploy to aws using zappa (update existing)
          command: |
            . venv/bin/activate
            zappa update dev

      - run:
          name: deploy to aws using zappa (deploy for first time)
          command: |
            . venv/bin/activate
            zappa deploy dev
          when: on_fail

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test

